name: Docker Build

on:
  push:
    paths:
      - '*/Dockerfile'
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - { name: 'ubuntu', context: 'ubuntu' }

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            */Dockerfile

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: wangq/${{ matrix.image.name }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Should build image
        id: should_build
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *"${{ matrix.image.context }}/Dockerfile"* ]]; then
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        if: steps.should_build.outputs.build == 'true'
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.image.context }}/.
          file: ${{ matrix.image.context }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        if: steps.should_build.outputs.build == 'true'
        run: echo ${{ steps.docker_build.outputs.digest }}